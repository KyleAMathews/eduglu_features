<?php

include_once('eduglue_user_profile.features.inc');


/**
 * Implementation of hook_init().
 */
function eduglue_user_profile_init() {
  drupal_get_path('module', 'eduglue_user_profile') .
                 "/eduglue_user_profile.css";
  drupal_add_css(drupal_get_path('module', 'eduglue_user_profile') .
                 "/eduglue_user_profile.css");
  
}

/**
 * Implementation of hook_block()
 */
function eduglue_user_profile_block($op = 'list', $delta = 0, $edit = array()) {
  switch ($op) {
    case 'list':
      $blocks[0]['info'] = t('User Profile Block with stats and bio');
      return $blocks;
    
    case 'view':
      global $user;
      $uid = 0;
      if (is_numeric(arg(1))) {
        $uid = check_plain(arg(1));
      }
      $content .= "";
      
      if (user_access('access content') && arg(0) == "user" && $uid != 0) {
        
        // If this is the user's page, add links to edit their account and profile
        if ($user->uid == $uid) {
          $profile_nid = db_result(db_query("SELECT nid FROM {node} 
          WHERE uid = %d AND TYPE = 'uprofile'", $uid));
          $content .= "<div id = 'edit-profile-account'>";
          $content .= l("<<Edit My Account>>", "user/". $uid ."/edit");
          $content .= "<br />";
          $content .= l("<<Edit My Profile>>", "node/". $profile_nid ."/edit");
          $content .= "</div";
          $content .= "<br />";
        }
        // Load info for profile (name, location, bio)
        $bio_results = db_fetch_array(db_query("SELECT
	  field_name_value AS name, 
	  field_location_value AS location, 
	  field_blog_url AS web, 
	  field_about_me_value AS bio,
	  field_twitter_value as twitter,
	  field_linkedin_profile_url as linkedin,
	  field_facebook_public_url as facebook,
	  field_role_value as role,
	  field_major_value as major
	  FROM {content_type_uprofile} c JOIN {node} n 
	  WHERE c.nid = n.nid AND n.uid = %d", $uid));
        
	if ($bio_results['major']) {
	  $content .= "<strong>Major</strong> ". $bio_results['major'] ."<br />";
        }
	if ($bio_results['role'] || $bio_results['role'] == 0) {
	  $role = "";
	  switch($bio_results['role']){
	    case 0:
	      $role = "Student";
	      break;
	    case 1:
	      $role = "Staff";
	      break;
	    case 2:
	      $role = "Professor";
	      break;
	    case 3:
	      $role = "Alumni";
	      break;
	  }
	  //$content .= "<strong>Role</strong> ". $role ."<br />";
        }
        if ($bio_results['location']) {
          $content .= "<strong>Location</strong> ". check_plain($bio_results['location']) ."<br />";
        }
        if ($bio_results['web']) {
	  $url_text = ShortenText($bio_results['web'], 20);
	  $content .= "<strong>Web</strong> ". l($url_text, $bio_results['web'],
					  array('absolute' => true)) ."<br />"; // maybe the link field module has a theme function?
        }
        if ($bio_results['bio']) {
	  $content .= "<strong>Bio</strong> ". filter_xss($bio_results['bio']) ."<br />";
        }
        
        // Load stats info
        $num_nodes = db_result(db_query("
        SELECT count(*) FROM {node} 
        WHERE uid = %d AND
        type NOT IN ('group_wiki', 'blog_feed', 'usernode', 'uprofile')", $uid));
        
        $num_comments = db_result(db_query("
        SELECT count(*) FROM {comments} WHERE uid = %d", $uid));
        
        $content .= "<table id='stats'>";
        $content .= "<tr><td>". $num_nodes ." Posts</td>
        <td class='left-border'>". $num_comments ." Comments</td></tr>";
        $content .= "</table>";
        $content .= "<hr />";
        
        // Contact part
        $name = check_plain($bio_results['name']);
        $content .= "<strong>Connect with ". $name ."</strong>";
        $content .= "<ul>";
        if ($user->uid != 0 && $user->uid != $uid) { // You can't contact yourself through island.
          $content .= "<li>". l("Email ". $name ." through Island", "user/". $uid ."/contact") ."</li>";
        }
        if ($bio_results['twitter']) {
          $bio_results['twitter'] = fix_twitter_link($bio_results['twitter']);
          $content .= "<li>". l("Follow ". $name ." on Twitter", 
          "http://twitter.com/". check_plain($bio_results['twitter'])) ."</li>";
        }
        if ($bio_results['linkedin']) {
          $content .= "<li>". l("Connect to ". $name ." on LinkedIn", 
          check_plain($bio_results['linkedin'])) ."</li>";
        }
        if ($bio_results['facebook']) {
          $content .= "<li>". l("Friend ". $name ." on Facebook", 
          check_plain($bio_results['facebook'])) ."</li>";
        }
	if (!$bio_results['facebook'] && !$bio_results['linkedin'] && !$bio_results['twitter']
	    && $uid == $user->uid) {
	  $content .= '<li>Edit your profile to give other ways for BYU people to connect with you.</li>';
	}
        $content .= "</ul>";
        
        $content .= "<hr />";
	
        // Load user's groups.
        // Query the database for the user's groups
        $results = db_query('SELECT og.nid, n.title from {og_uid} og join 
        {node} n join {og} o where og.uid = %s and og.nid=n.nid and 
        o.nid=og.nid and o.og_private = 0 order by n.title', $uid);
          
        $items = array();
        while ($group = db_fetch_object($results)) {
          $items[] = l($group->title, 'node/' . $group->nid);
        }
        
        $possesive_name = explode(" ", check_plain($bio_results['name']));
        $possesive_name_str = $possesive_name[0] ."'s Groups";
        $content .= "<strong>". $possesive_name_str . "</strong>";
	if ($items) {
	  $content .= theme('item_list', $items); 
	}
	else {
	  $content .= "<ul><li>" . $possesive_name[0] . " hasn't joined any groups yet.</li></ul>";
	}
        
        // return new block
      	$block['subject'] = $bio_results['name'];
      	$block['content'] = $content;
      	return $block;

      }
  }
}

function ShortenText($text, $numChars) {
	if (strlen($text) > $numChars) {
		$text = substr($text,0,$numChars);
		//$text = substr($text,0,strrpos($text,' '));
		$text = $text ."...";
	}
	
	return $text;
}

function fix_twitter_link($twitter_text) {
  if (stristr($twitter_text, "twitter.com")) {
    $twitter_parts = explode("/", $twitter_text) ;
    return check_plain(end(array_values($twitter_parts)));
  }
  else {
    return check_plain($twitter_text);
  }
}

